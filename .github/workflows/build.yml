name: Cargo build

on: 
  push:
    paths-ignore:
        - 'doc/**'
        - '.gitignore'
        - 'LICENSE'
        - 'README*'
  pull_request:
    paths-ignore:
        - 'doc/**'
        - '.gitignore'
        - 'LICENSE'
        - 'README*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest

    steps:
      - name: Install custom vcpkg
        uses: RealChuan/install-vcpkg@main
        with:
          repo: 'https://github.com/RealChuan/vcpkg.git'
          branch: 'dev'

      - name: Cache windows vcpkg
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with: 
          path: C:\vcpkg\installed
          key: ${{ matrix.os }}-vcpkg-installed-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            ${{ matrix.os }}-vcpkg-installed-${{ runner.os }}-
            ${{ matrix.os }}-vcpkg-installed-
            ${{ matrix.os }}-

      - name: Cache macos or linux vcpkg
        if: runner.os == 'macOS' || runner.os == 'Linux'
        uses: actions/cache@v4
        with: 
          path: /usr/local/share/vcpkg/installed
          key: ${{ matrix.os }}-vcpkg-installed-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            ${{ matrix.os }}-vcpkg-installed-${{ runner.os }}-
            ${{ matrix.os }}-vcpkg-installed-
            ${{ matrix.os }}-
              
      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          vcpkg integrate install
          vcpkg install openssl --triplet x64-windows-static-md
      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          brew install openssl@3
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config libssl-dev

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build
        shell: bash
        run: |
          cargo build --workspace
      - name: Test
        shell: bash
        run: |
          cargo test --workspace
